name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
     
      - name: Set output
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - name: Check output
        run: echo ${{ steps.vars.outputs.short_ref }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        if: ${{ steps.vars.outputs.short_ref == 'master' &&  github.event_name != 'pull_request'}}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push backend
        if: ${{ steps.vars.outputs.short_ref == 'master' &&  github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: user/docker-nginx-ssl/backend:latest
          
      - name: Build and push frontend
        if: ${{ steps.vars.outputs.short_ref == 'master' &&  github.event_name != 'pull_request'}}
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: user/docker-nginx-ssl/frontend:latest
      
      - name: Build and push backend
        if: ${{ steps.vars.outputs.short_ref != 'master' &&  github.event_name == 'pull_request'}}
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: false
          tags: user/docker-nginx-ssl/backend:latest
          
      - name: Build and push frontend
        if: ${{ steps.vars.outputs.short_ref != 'master' &&  github.event_name == 'pull_request'}}
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: false
          tags: user/docker-nginx-ssl/frontend:latest
